#!/bin/sh


echo -e "\nStarting initramfs... "
. /etc/profile

/bin/mount -a
/bin/mount -o remount,rw /
#/bin/mount -t proc proc /proc


. /etc/init.d/rcS start

if [ -e /tmp/reboot ]; then
	. /etc/init.d/rcS stop
	rmmod stmfb 2>/dev/null
	rmmod stmcore-display-sti7105 2>/dev/null
	umount -a
	reboot -f
fi


#change root
NEWROOT=""
if [ -n "`cat /proc/cmdline | grep "root=/dev/nfs"`" -a -z "" ]; then
	NEWROOT=`cat /proc/cmdline | sed 's/.*nfsroot=\([^ ,]\+\).*/\1/'`
	NFSOPT=`cat /proc/cmdline | sed 's/.*nfsroot=[^ ,]\+\(,*[^ ]*\).*/\1/'`
	FSTYPE="nfs"
	FSOPT="-o nolock,rw${NFSOPT}"
elif [ -n "`cat /proc/cmdline | grep "root=/dev/mtdblock"`" ]; then
	NEWROOT=`cat /proc/cmdline | sed 's/.*root=\(\/dev\/mtdblock[^ ]\+\).*/\1/'`
	FSTYPE=`cat /proc/cmdline | sed 's/.*rootfstype=\([^ ]\+\).*/\1/'`
	FSOPT="-o ro,noatime"
fi


if [ -n "$NEWROOT" ]; then
	. /etc/init.d/rcS stop
	umount -a
	echo -n "Mount rootfs ${NEWROOT}, fs type ${FSTYPE}, with options \"$FSOPT\"... "
	mount -t $FSTYPE $FSOPT $NEWROOT /mnt
	if [ "$?" -eq "0" ]; then
		echo "done"
		echo "Switch root"
		exec  switch_root /mnt /init
	else
		echo "ERROR!!! Cant mount rootfs!!"
	fi

#run some startup scripts
	/bin/mount -a
	for i in /etc/init.d/S[012]*; do
		[ ! -f "$i" ] && continue
		$i start
	done
fi

#if we didnt change root, then login
TTY_NAME=`cat /proc/cmdline | grep console= | sed 's/.*console=\(ttyAS[0-9]\).*/\1/'`
TTY_NAME=/dev/${TTY_NAME:-console}
exec setsid sh -c "exec sh --login <$TTY_NAME >$TTY_NAME 2>&1"
#/bin/sh --login

